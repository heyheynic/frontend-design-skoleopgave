:root {
  --color-heading: #0b0d19;
  --color-body: #677386;
  --color-bg-button: #3d7bfa;
  --color-text-button: #fff;

  /* Når du synes, du er færdig, så ændr værdien herunder til '1' for at se dit resultat i browseren */
  --hide-overlay: 1;
}

/* Begynd her... */

/* Final thoughts from the student after having revealed the result:

As a general, I feel like I got the hang of the overall structure, especially with styling the items.

However, I clearly need to work on grid layout that involves many different items. I do not feel confident with how to place certain things in a grid like this, and especially not how to make it responsive with using auto, minmax() etc properties.

Also, the only thing I had in mind when doing it responsive was to give it a breaking point (still not my ideal way of tackling it). I realise now that the header doesn't change size, and that the images follow the same grid as when they're in widescreen mode. 

Overall, very thoughtprovoking and honest task. 
*/


main {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 1100px;
  margin: auto;
  gap: 2em;
  padding: 0 2em;

  @media screen and (max-width: 900px) {
    grid-template-columns: 1fr;
  }
}

.container:nth-of-type(1) {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2em;
}

h1 {
  font-size: 8rem;
  color: var(--color-heading);
}

p {
  color: var(--color-body);
  line-height: 1.8;
  font-size: 1rem;
}

.button {
  place-self: start;
  background-color: var(--color-bg-button);
  color: var(--color-text-button);
  text-decoration: none;
  padding: 1rem 2rem;
  border-radius: 100px;
}

.container:nth-of-type(2) {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-auto-rows: 25%;
  gap: 1em;
}

img {
  border-radius: 30px;

  &:first-of-type {
    grid-row: 1;
    grid-column: 2/3;
  }

  &:nth-of-type(3) {
    grid-row: 2 / span 2;
    grid-column: 2/3;
  }

  &:nth-of-type(7) {
    grid-row: 4;
    grid-column: 2/3;
  }
}
